#pragma once

#include <core/http/http-client.h>

#define CHTTP_MIME_GEN_UINT32(name, val)                                                                               \
    (chttp_mime_gen_t)                                                                                                 \
    {                                                                                                                  \
        CHTTP_MIME_TYPE_DATA, name, chttp_mime_gen_uint32,                                                             \
        {                                                                                                              \
            .u32 = val                                                                                                 \
        }                                                                                                              \
    }
#define CHTTP_MIME_GEN_JENUM_ARR(name, val)                                                                            \
    (chttp_mime_gen_t)                                                                                                 \
    {                                                                                                                  \
        CHTTP_MIME_TYPE_DATA, name, chttp_mime_gen_jenum_arr,                                                          \
        {                                                                                                              \
            .enum_arr = val                                                                                            \
        }                                                                                                              \
    }

/**
 * @brief Structure to represent an array of enums for MIME generation
 */
typedef struct {
    const uint32_t *arr;      ///< Enums values array pointer
    const char *const *enums; ///< Comma-separated list of enum string values
    uint32_t count;           ///< Number of items in the array
} chttp_mime_enum_arr_t;

/**
 * @brief Union of possible MIME part values
 */
typedef union {
    const chttp_mime_enum_arr_t *enum_arr; ///< Array of enums
    uint32_t u32;                          ///< uint32_t value
} chttp_mime_val_t;

/**
 * @brief Callback function type for generating MIME parts
 * @param buf - [in] Pointer to buffer to store generated data
 * @param val - [in] Value to be used for generating the MIME part
 */
typedef void (*chttp_mime_gen_cb_t)(str_buf_t *buf, chttp_mime_val_t val);

/**
 * @brief Structure to represent a MIME part generated by a callback
 */
typedef struct {
    chttp_mime_type_t type; ///< MIME part type
    const char *name;       ///< Name of the mime part
    chttp_mime_gen_cb_t cb; ///< Callback function to generate the mime part data
    chttp_mime_val_t val;   ///< Value to be used by the callback for generation
} chttp_mime_gen_t;

/**
 * @brief Perform an asynchronous HTTP POST request with generated MIME parts
 * @param url - [in] URL to send the POST request to
 * @param mimes - [in] Array of MIME parts to be generated
 * @param mimes_count - [in] Number of MIME parts in the array
 * @param cb - [in] Callback function to handle the HTTP response
 * @param user_data - [in] User private  data to be passed to the callback function
 * @return CHTTP_ERR_OK on success, error code otherwise
 */
chttp_err_t chttp_post_gen(const char *url, const chttp_mime_gen_t *mimes, uint32_t mimes_count, chttp_resp_cb_t cb,
                           const buf_t *user_data);

/**
 * @brief Generate a MIME part containing a uint32 value
 * @param buf - [in] Pointer to buffer to store generated data
 * @param val - [in] Value to be used for generating the MIME part
 */
void chttp_mime_gen_uint32(str_buf_t *buf, chttp_mime_val_t val);

/**
 * @brief Generate a MIME part containing a JSON array of enums
 * @param buf - [in] Pointer to buffer to store generated data
 * @param val - [in] Value to be used for generating the MIME part
 */
void chttp_mime_gen_jenum_arr(str_buf_t *buf, chttp_mime_val_t val);
